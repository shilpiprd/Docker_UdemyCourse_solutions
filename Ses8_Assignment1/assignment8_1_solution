docker network create --driver overlay frontend #overlay is the only kind of network we can use in swarm, as overlay allows us to span across nodes, as if they're all on the local network
docker network create --driver overlay backend
#we just need 2 networks so that we can segmnet our different services into one or the other to help act like a little firewall that gives separation for our protection.
#volume is created while doing docker container run -v " " image_name
docker service create --name vote --replicas 2 --network frontend -p 80:80 bretfisher/examplevotingapp_vote
docker service create -d --name redis --network frontend --replicas 1 redis:3.2 
#here we're storing results in postgres
#1 replica is by default, so u don't actually need to specify anything , therfore u also don't need to pubilsh any port
docker service create -d --name worker --network backend --network frontend --replicas 1  bretfisher/examplevotingapp_worker
#dont use the -v option in this case, instead use the -mount opration as -v doesn't work well with docker swarm 
docker service create --name db --mount type=volume,source=db-data,target=/var/lib/postgresql/data --replicas 1 --network backend -e POSTGRES_HOST_AUTH_METHOD=trust postgres:9.4
#port 80 is for the conainter.
docker service create --name result -p 5001:80 --network backend --replicas 1 bretfisher/examplevotingapp_result 
